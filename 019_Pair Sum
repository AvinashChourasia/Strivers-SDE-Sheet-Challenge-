import java.io.*;
import java.util.* ;

public class Solution{
    public static List<int[]> pairSum(int[] arr, int s) {
        

        // Using HashMap
        List<int[]> ans = new ArrayList<>();
        Arrays.sort(arr);
        int n = arr.length;
        HashMap<Integer,Integer> h = new HashMap<>();
        for(int item:arr){
            if(h.containsKey(s-item)){
                int k = h.get(s-item);
                while(k>0){
                    int a[] = new int[2];
                    a[0] = s-item;
                    a[1] = item;
                    ans.add(a);
                    k--;
                }
            }
            h.put(item,h.getOrDefault(item,0)+1);
        }
        Collections.sort(ans, new Comparator<int[]>() {
            @Override
            public int compare(int a1[], int a2[]) {
                return Integer.compare(a1[0], a2[0]);
            }
        });
        return ans;



        // Using Binary Search
        List<int[]> ans = new ArrayList<>();
        Arrays.sort(arr);
        int n = arr.length;
        int i = 0;
        int j = n-1;
        while(i<j){
            if(arr[i]+arr[j]==s){
                if(arr[i]==arr[j]){
                    int x = j-i+1;
                    int k = x*(x-1)/2;
                    while(k>0){
                        int a[] = new int[2];
                        a[0] = arr[i];
                        a[1] = arr[j];
                        ans.add(a);
                        k--;
                    }
                    return ans;
                }
                else{
                    int low = i;
                    int high = j;
                    int count1 = 0;
                    int count2 = 0;
                    while(arr[low]==arr[i]){
                        low++;
                        count1++;
                    }
                    while(arr[high]==arr[j]){
                        high--;
                        count2++;
                    }
                    for(int k=0;k<count1*count2;k++){
                        int a[] = new int[2];
                        a[0] = arr[i];
                        a[1] = arr[j];
                        ans.add(a);
                    }
                    i = low;
                    j = high;
                }
            }
            else if(arr[i]+arr[j]>s){
                j--;
            }
            else{
                i++;
            }
        }
        return ans;
    }
}
