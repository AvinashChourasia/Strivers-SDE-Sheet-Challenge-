import java.util.* ;
import java.io.*; 
public class Solution {
	
	public static String graphColoring(int[][] mat, int m) {
		
		int n = mat.length;
		ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
		for(int i=0;i<n;i++){
			adj.add(new ArrayList<>());
		}
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				if(mat[i][j]==1){
					adj.get(i).add(j);
				}
			}
		}
		int color[] = new int[n];
		if(f(0,adj,color,m,n)){
			return "YES";
		}
		return "NO";
	}

	public static boolean f(int ind,ArrayList<ArrayList<Integer>> adj,int color[],int m,int n){
		if(ind==n){
			return true;
		}
		for(int i=1;i<=m;i++){
			if(isSafe(ind,adj,color,i)){
				color[ind] = i;
				if(f(ind+1,adj,color,m,n)){
					return true;
				}
				color[ind] = 0;
			}
		}
		return false;
	}

	public static boolean isSafe(int node,ArrayList<ArrayList<Integer>> adj,int color[],int col){
		for(int adjNode:adj.get(node)){
			if(color[adjNode]==col){
				return false;
			}
		}
		return true;
	}
	
}
