import java.util.* ;
import java.io.*; 

class Node{

    Node links[] = new Node[26];
    boolean flag = false;

    public boolean containsKey(char ch){
        return (links[ch-'a']!=null);
    }
    public void put(char ch,Node node){
        links[ch-'a'] = node;
    }
    public Node get(char ch){
        return links[ch-'a'];
    }
    public void setEnd(){
        flag = true;
    }
    public boolean isEnd(){
        return flag;
    }

}


public class Solution {

    public static int distinctSubstring(String word) {

        Node root = new Node();
        int n = word.length();
        int count = 0;
        for(int i=0;i<n;i++){
            Node node = root;
            for(int j=i;j<n;j++){
                if(!node.containsKey(word.charAt(j))){
                    node.put(word.charAt(j),new Node());
                    count++;
                }
                node = node.get(word.charAt(j));
            }
        }
        return count;
    }

}
