import java.util.* ;
import java.io.*; 
public class Solution {
    
    public static boolean subsetSumToK(int n, int k, int arr[]){
        
        int dp[][] = new int[n][k+1];
        for(int[] row:dp){
            Arrays.fill(row,-1);
        }
        if(f(n-1,k,arr,dp)==1){
            return true;
        }
        return false;
    }

    public static int f(int i,int sum,int arr[],int dp[][]){
        if(sum==0){
            return 1;
        }
        if(i==0){
            if(sum==arr[0]){
                return 1;
            }
            return 0;
        }
        if(dp[i][sum]!=-1){
            return dp[i][sum];
        }
        int pick = 0;
        if(arr[i]<=sum){
            pick = f(i-1,sum-arr[i],arr,dp);
        }
        int notPick = f(i-1,sum,arr,dp);
        return dp[i][sum] = pick|notPick;
    }

}
