import java.util.* ;
import java.io.*; 
public class Solution {

	public static int palindromePartitioning(String str) {
	    
		int n = str.length();
		int dp[] = new int[n];
		Arrays.fill(dp,-1);
		return f(0,str,n,dp)-1;
	}

	public static int f(int i,String str,int n,int dp[]){
		if(i==n){
			return 0;
		}
		if(dp[i]!=-1){
			return dp[i];
		}
		int mini = Integer.MAX_VALUE;
		for(int ind=i;ind<n;ind++){
			if(isPalindrome(str,i,ind)==true){
				int x = 1 + f(ind+1,str,n,dp);
				mini = Math.min(mini,x);
			}
		}
		return dp[i] = mini;
	}

	public static boolean isPalindrome(String s,int i,int j){
		while(i<=j){
			if(s.charAt(i)!=s.charAt(j)){
				return false;
			}
			i++;
			j--;
		}
		return true;
	}

}
