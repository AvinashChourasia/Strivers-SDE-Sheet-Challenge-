import java.util.ArrayList;
import java.util.*;

public class Solution {
  public static int largestRectangle(ArrayList < Integer > heights) {
    
    int n = heights.size();
    Stack<Integer> s1 = new Stack<>();
    int pse[] = new int[n];
    for(int i=0;i<n;i++){
      while(!s1.isEmpty() && heights.get(s1.peek())>=heights.get(i)){
        s1.pop();
      }
      if(!s1.isEmpty()){
        pse[i] = s1.peek();
      }
      else{
        pse[i] = -1;
      }
      s1.push(i);
    }

    Stack<Integer> s2 = new Stack<>();
    int nse[] = new int[n];
    for(int i=n-1;i>=0;i--){
      while(!s2.isEmpty() && heights.get(s2.peek())>=heights.get(i)){
        s2.pop();
      }
      if(!s2.isEmpty()){
        nse[i] = s2.peek();
      }
      else{
        nse[i] = n;
      }
      s2.push(i);
    }

    int ans = 0;
    for(int i=0;i<n;i++){
      ans = Math.max(ans, heights.get(i)*(Math.abs(nse[i]-pse[i])-1) );
    }
    return ans;
  }

}
