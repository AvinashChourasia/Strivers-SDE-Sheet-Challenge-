class Par{
    double f;
    int s;
	Par(double f,int s){
        this.f = f;
        this.s = s;
    }
}

class itemComparator implements Comparator<Par>{
	@Override
    public int compare(Par a, Par b){
        if(a.f<=b.f){
            return 1;
        }
        return -1;
    }
}


public class Solution {
    public static double maximumValue(Pair[] items, int n, int w) {

		Par arr[] = new Par[n];
        for(int i=0;i<n;i++){
            double x = (double)items[i].value/(double)items[i].weight;
            arr[i] = new Par(x,items[i].weight);
        }
        Arrays.sort(arr,new itemComparator());
        double profit = 0;
        int i = 0;
        while(i<n && w>0){
            double r = arr[i].f;
            int wt = arr[i].s;
            if(w>=wt){
                profit += (double)(wt)*r;
                w-=wt;
            }
            else{
                profit+=(double)(w)*r;
                w=0;
            }
            i++;
        }
        return profit;
    }
}
