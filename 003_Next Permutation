import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> p){

		int n = p.size();
		// int a[] = new int[n];
		int index = 0;
		boolean flag = false;
		for(int i=n-2;i>=0;i--){
			if(p.get(i)<p.get(i+1)){
				index = i;
				flag = true;
				break;
			}
		}
		if(flag==false){
			int low = 0;
			int high = n-1;
			while(low<high){
				int a = p.get(low);
				int b = p.get(high);
				p.set(low,b);
				p.set(high,a);
				low++;
				high--;
			}
			return p;
		}
		for(int i=n-1;i>=index;i--){
			if(p.get(i)>p.get(index)){
				int a = p.get(i);
				int b = p.get(index);
				p.set(i,b);
				p.set(index,a);
				break;
			}
		}
		int low = index+1;
		int high = n-1;
		while(low<high){
			int a = p.get(low);
			int b = p.get(high);
			p.set(low,b);
			p.set(high,a);
			low++;
			high--;
		}
		return p;
	}

}
